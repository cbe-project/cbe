assert_spec linux

proc cbe_image_file { } {
	return "cbe_block.img"
}

set image_size 512
if {[info exists ::env(CBE_IMAGE_SIZE)]} {
	set image_size $::env(CBE_IMAGE_SIZE)
}

proc cbe_image_size_mb { } {
	global image_size
	return $image_size
}

proc cbe_vbd_size_mb { } {
	return [expr [cbe_image_size_mb] / 2]
}

proc cbe_ft_size_mb { } {
	return [expr [cbe_image_size_mb] / 8]
}


append build_components {
	core init timer
	server/ram_block
	server/cbe
	server/cbe_block
	app/block_tester
	server/log_terminal
	server/report_rom

	server/lx_block
}

build $build_components

create_boot_directory

append config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>

	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<default caps="100"/>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes"/>
	</start>

	<start name="block_device" ld="no">
		<binary name="lx_block"/>
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Block"/> </provides>
		<config file="} [cbe_image_file] {" block_size="4K" writeable="yes"/>
	</start>

	<start name="cbe_block">
		<resource name="RAM" quantum="1300M"/>
		<provides><service name="Block"/></provides>
		<config report="yes" verbose="no"
			ft_outer_degree="64"
			vbd_outer_degree="64"
			backing_size="} [cbe_image_size_mb] {M"
			vbd_size="} [cbe_vbd_size_mb] {M"
			ft_size="} [cbe_ft_size_mb] {M"
			initialize="yes"
			write_init_state_to_block="yes"
			exit_after_init="yes"/>
		<route>
			<service name="Block"> <child name="block_device"/> </service>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
</config>}

install_config $config

exec rm -rf bin/[cbe_image_file]
exec truncate -s [cbe_image_size_mb]M bin/[cbe_image_file]

append boot_modules {
	core init timer ram_block cbe_block cbe
	ld.lib.so spark.lib.so libsparkcrypto.lib.so
	report_rom lx_block
}

append boot_modules [cbe_image_file]

build_boot_image $boot_modules

append qemu_args " -nographic -m 1536 "

run_genode_until {.*child "cbe_block" exited with exit value 0.*\n} 240
